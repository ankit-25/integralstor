#!/bin/bash
# chkconfig: 2345 05 95
# description: create ramdisk and adds it as slog to zpool
#

### BEGIN INIT INFO
# Provides: ramdisk
# Required-Start:
# Required-Stop:
# Should-Start: 
# Should-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 1
# Short-Description: Mount/umount the zfs filesystems
# Description: ZFS is an advanced filesystem designed to simplify managing
#              and protecting your data.  This service mounts the ZFS
#              filesystems and starts all related zfs services.
### END INIT INFO

. /etc/init.d/functions

BASE=ramdisk
RETVAL=0
LOCKFILE=/var/lock/subsys/${BASE}
file=/opt/integralstor/integralstor/ramdisks

start() {
cat $file | while read var1 var2 var3;
   do
   if [ -e $LOCKFILE ] ; then
     echo "$BASE is already started"
     exit 1
   fi

   echo -n $"Starting $BASE:"

   if [ ! -e $var2 ] ; then
     mkdir -p $var2
   fi

   mount -t tmpfs -o size=$var3m tmpfs $var2
   dd if=/dev/zero of=$var2/ramfile bs=1024 count=2M > /dev/null 2>&1
   zpool clear $var1
   zpool status | grep logs > /dev/null 2>&1
   if (( ! $? )) ; then
   zpool remove $var1 $var2/ramfile
   fi
   zpool add $var1 log $var2/ramfile
   RETVAL=$?
   echo
     [ $RETVAL -eq 0 ] && touch $LOCKFILE
   return $RETVAL

done
}

stop() {
cat $file | while read var1 var2 var3;
   do
   echo -n $"Stopping $BASE:"
   zfs umount -a
   zpool remove $var1 $var2/ramfile
   umount $var2
   RETVAL=$?
   echo
     [ $RETVAL -eq 0 ] && rm -f $LOCKFILE
   return $RETVAL
done
}

restart() {
    stop
    start
}

status() {
   if [ ! -e $LOCKFILE ] ; then
     echo "$BASE is stopped"
   else
     echo "$BASE is running"
   fi
   RETVAL=$?
   return $RETVAL
}


case $1 in
    start)
        $1
   	    ;;
    stop)
        $1
   	    ;;
    restart)
        $1
        ;;
    status)
        status
        ;;
    *)
	      echo "Usage: $prog {start| stop| status| restart}"
	      exit 1
esac

exit $?
