%include /tmp/part-include
# Integralstor UNICell v1.0
# platform=x86, AMD64, or Intel EM64T
# version=1.0

# Firewall configuration
firewall --disabled

# Install OS instead of upgrade
install
unsupported_hardware

# Use network installation
url --url="http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/iso"
repo --name=extrasRepo --baseurl=http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/rpms_zfs-0.6.5.6 #in end change rpms_zfs-0.6.3 for zfs version 0.6.3

# Root password
rootpw --iscrypted $1$NdB3lmS6$oXH5W2QCg4d6syxgE1GTA0 

# System authorization information
auth  --useshadow  --passalgo=sha512

# Use text mode install
text

# System keyboard
keyboard us

# System language
lang en_US

# SELinux configuration
selinux --disabled

# Do not configure the X Window System
skipx

# Installation logging level
logging --level=info

# Reboot after installation
reboot --eject

# System timezone
timezone  Asia/Kolkata

%pre
#!/usr/bin/bash
DIR="/sys/block"
MAXBOOTSIZE=300
MINBOOTSIZE=1
PATH="/dev"

### Running a for loop on Disks available among one will be selected by user/admin for OS to Install ###
clear >/dev/tty1
echo >/dev/tty1

echo -n "Available disks to install Operating System and their size: " >/dev/tty1
echo >/dev/tty1
for DEV in sd{a..z} ; do
  if [ -b "/dev/$DEV" ] ; then
    #Command to get size of the hard disk
    SIZE=`/usr/bin/cat $DIR/$DEV/size`
    GB=$(($SIZE/2**21))
    if [ "$GB" -le "$MAXBOOTSIZE" ] 
	then
	    if [ "$GB" -ge "$MINBOOTSIZE" ]
		then
      		device=$DEV
      		echo >/dev/tty1
		echo -n "Disk : "$device" : Size : "$GB "GB" >/dev/tty1
		echo >/dev/tty1
	    fi
    fi
    #echo -n "Disk : " $DEV " - : Size : " $GB "GB" >/dev/tty1
  fi
done
echo >/dev/tty1
echo -n "(NOTE: Please make sure that you have inserted two disks of same size to mirror the OS (To exit Press Ctrl+Alt+Del)) " >/dev/tty1
echo >/dev/tty1
echo >/dev/tty1
echo -n "Do you want to mirror the operating system drive? (y/n) : " >/dev/tty1
read input

    if [[ $input == "y" || $input == "Y" || $input == "yes" || $input == "Yes" || $input == "YES" ]] ; then

	echo -n "Please select the first mirrored OS drive (eg. sda) : " >/dev/tty1
	read bootdevice1
	echo -n "Please select the second mirrored OS drive (eg. sdb) : " >/dev/tty1
	read bootdevice2
	    size1=`/usr/bin/cat $DIR/$bootdevice1/size`
	    #echo -n "size of $bootdevice1 : $size1 " >/dev/tty1
	    size2=`/usr/bin/cat $DIR/$bootdevice2/size`
	    #echo -n "size of $bootdevice2 : $size2 " >/dev/tty1
	      if [[ "$size1" == "$size2" ]] ; then

		echo -n "Please select the swap size in MBs... [Eg. 16384(for 8GB) OR 32768(for 16GB)] : " >/dev/tty1
		read swsize1
		echo >/dev/tty1
		echo "#partitioning scheme generated in %pre for 3 drives" > /tmp/part-include
		echo "bootloader --location=mbr --driveorder=$bootdevice1,$bootdevice2" >> /tmp/part-include
		echo "zerombr" >> /tmp/part-include
		echo -n "Select "YES" to clear prtitions of all disks(else it clears partition of selected BOOT disks) : " >/dev/tty1
		read partselect1
       		
        	if [[ $partselect1 == "y" || $partselect1 == "Y" || $partselect1 == "yes" || $partselect1 == "Yes" || $partselect1 == "YES" ]] ; then
			echo "clearpart --all" >> /tmp/part-include
		else
	
			echo "clearpart --drives=$bootdevice1,$bootdevice2 --all" >> /tmp/part-include
		fi		

		echo "part raid.11    --size 1024     --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
		echo "part raid.12    --size $swsize1 --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
		echo "part raid.13    --size 10240    --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
		echo "part raid.14    --size 10240                    --ondrive=$bootdevice1" >> /tmp/part-include
		echo "part raid.15    --size 10240    --grow          --ondrive=$bootdevice1" >> /tmp/part-include
		echo "part raid.21    --size 1024     --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
		echo "part raid.22    --size $swsize1 --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
		echo "part raid.23    --size 10240    --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
		echo "part raid.24    --size 10240                    --ondrive=$bootdevice2" >> /tmp/part-include
		echo "part raid.25    --size 10240    --grow          --ondrive=$bootdevice2" >> /tmp/part-include

		# You can add --spares=x  
		echo "raid /boot      --fstype ext4   --device md0    --level=RAID1 raid.11 raid.21" >> /tmp/part-include
		echo "raid swap       --fstype swap   --device md1    --level=RAID1 raid.12 raid.22" >> /tmp/part-include
		echo "raid /home      --fstype ext4   --device md2    --level=RAID1 raid.13 raid.23" >> /tmp/part-include
		echo "raid /opt       --fstype ext4   --device md3    --level=RAID1 raid.14 raid.24" >> /tmp/part-include
		echo "raid /          --fstype ext4   --device md4    --level=RAID1 raid.15 raid.25" >> /tmp/part-include
	      else
		echo >/dev/tty1
	        echo -n "Error occured!!! Exiting..." >/dev/tty1
		echo >/dev/tty1
	      fi
    elif [[ $input == "n" || $input == "N" || $input == "no" || $input == "No" || $input == "NO" || $input == "" || $input == " " ]]; then

	echo -n "Please select the boot device (eg. sda) : " >/dev/tty1
	read bootdevice1
	echo -n "Please select the swap size in MBs... [Eg. 16384(for 8GB) OR 32768(for 16GB)] : " >/dev/tty1
	read swsize2
	echo >/dev/tty1
	echo "#partitioning scheme generated in %pre for 3 drives" > /tmp/part-include
	echo "bootloader --location=mbr" >> /tmp/part-include
	echo "zerombr" >> /tmp/part-include
	echo -n "Select "YES" to clear prtitions of all disks(else it will only clears partition of selected BOOT disk) : " >/dev/tty1
	read partselect2
       
        if [[ $partselect2 == "y" || $partselect2 == "Y" || $partselect2 == "yes" || $partselect2 == "Yes" || $partselect2 == "YES" ]] ; then
		echo "clearpart --all" >> /tmp/part-include
	else	
	
		echo "clearpart --drives=$bootdevice1 --all" >> /tmp/part-include
	fi
		echo "part /boot --fstype ext4 --size 1024 --ondisk $bootdevice1" >> /tmp/part-include
		echo "part swap --fstype swap --size $swsize2 --ondisk $bootdevice1" >> /tmp/part-include
		echo "part /home --fstype ext4 --size 10240 --ondisk $bootdevice1" >> /tmp/part-include
		echo "part /opt --fstype ext4 --size 10240 --ondisk $bootdevice1" >> /tmp/part-include
		echo "part / --fstype ext4 --size 1 --grow --ondisk $bootdevice1" >> /tmp/part-include
      fi
    fi

%end

### Package Section ###
%packages --ignoremissing
@core
@Compatibility libraries
salt-master
salt-minion
sg3_utils
perl-Config-General
scsi-target-utils
nfs-utils
smartmontools
samba-client
samba
samba-winbind
samba-winbind-clients
smbldap-tools
openldap-clients
openldap-servers
nss-pam-ldapd
ipmitool
OpenIPMI
zfs
krb5-workstation
python-setuptools
python-pip
ypbind
ypserv
ntp
uwsgi
nginx
kexec-tools
fractalio_django
kmod-mv94xx
python-devel
gcc
vsftpd

%end

%post --log=/root/ks-post.log

### Adding a user and group called integralstor. ###
groupadd integralstor -g 500
useradd integralstor -g 500 
useradd replicator 
echo "integralstor123" | passwd --stdin integralstor
echo "replicator123" | passwd --stdin replicator 
echo "integralstor    ALL=(ALL)    ALL" >> /etc/sudoers
echo "replicator    ALL=(ALL)    NOPASSWD: /sbin/zfs" >> /etc/sudoers
echo "AllowUsers replicator integralstor" >> /etc/ssh/sshd_config 


### Network interface configuration  ###

ACTIVE_INTERFACES=`ifconfig | awk -vRS= -vFS="\n" '{ if ( $0 ~ /inet\ addr:/ ) { print }}' | sed 's/[ \t].*//;/^\(lo\|\)$/d'`
for IF in $ACTIVE_INTERFACES
do
echo "Configuring $IF to be static address" >> /root/post_install.log 2>&1
rm -f /etc/sysconfig/network-scripts/ifcfg-$IF
cat >> /etc/sysconfig/network-scripts/ifcfg-$IF <<EOF
DEVICE=$IF
HWADDR=`ifconfig $IF | grep HWaddr | awk '{print $5}'`
ONBOOT=yes
BOOTPROTO=static
IPADDR=`ifconfig $IF |awk 'BEGIN {FS = "[: ]+"} ; /inet addr/{print $4}'`
NETMASK=`ifconfig $IF |awk 'BEGIN {FS = "[: ]+"} ; /inet addr/{print $8}'`
EOF
GATEWAY_IP=`netstat -nr | awk '{ if ($4 ~/UG/) print; }' | awk -v CUR_IF=$IF '$NF==CUR_IF {print $2};'`
# The variable $GATEWAY_IP might be empty if all/some subgroup of interface(s) connect to the same network subnet or if some interface(s) has
# an unspecified/no gateway.
if [ ! -z "$GATEWAY_IP" ]
then
cat >> /etc/sysconfig/network-scripts/ifcfg-$IF <<EOF
GATEWAY=$GATEWAY_IP
EOF
fi
cat >> /etc/sysconfig/network-scripts/ifcfg-$IF <<EOF
TYPE=Ethernet
NM_CONTROLLED=no
USERCTL=no
PEERDNS=yes
IPV6INIT=no
EOF
done

### Set hostname ###
# By extracting the last two mac fields for hostname
# and setting the hostname to "unicell-xx.integralstor.lan"
STRING=$(ifconfig | grep eth0 | head -1 | awk '{print $5}' | awk -F ':' '{print tolower($5 $6)}')
hnpart="unicell-"$STRING
hostname="$hnpart.integralstor.lan"
echo "Hostname will be : " $hostname ; echo
echo "HOSTNAME=$hostname" > /etc/sysconfig/network
echo "NETWORKING=yes" >> /etc/sysconfig/network

### Editing /etc/hosts ###
ip=$(ifconfig | awk -F':' '/inet addr/&&!/127.0.0.1/{split($2,_," ");print _[1]}')
echo "$ip $hnpart $hostname" >> /etc/hosts

### Disabling the OPenGPGCheck and reloading the abrtd service ###
if [ -e "/etc/abrt/abrt-action-save-package-data.conf" ] ; then
  sed -i 's/OpenGPGCheck = yes/OpenGPGCheck = no/' /etc/abrt/abrt-action-save-package-data.conf 
else
  echo "No such file found : /etc/abrt/abrt-action-save-package-data.conf"
fi

### SSHD configuration ###

/etc/init.d/sshd stop
sed '' /etc/ssh/sshd_config > /etc/ssh/original_sshd_config
sed '/#PermitRootLogin/a PermitRootLogin no' /etc/ssh/sshd_config > /etc/ssh/temp_file
#echo 'AllowUsers integralstor' >> /etc/ssh/temp_file
sed -e '/requiretty/s/^/#/g' -i /etc/sudoers    #serach for requiretty and comment. This is to avoid tty for replication in zfs send/receive
rm -f /etc/ssh/sshd_config
mv /etc/ssh/temp_file /etc/ssh/sshd_config
/etc/init.d/sshd start
ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ''


### Editing the /etc/yum.repos.d/CentOS-Base.repo ###
# ..to disable base, updates and extras repositories. ###

cp -rf /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/Original-CentOS-Base-repo
sed -i '/\[base\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo 
sed -i '/\[updates\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo 
sed -i '/\[extras\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo
sed -i '/\[centosplus\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo
sed -i '/\[contrib\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo


### Directory creation ###
/bin/mkdir -p /opt/integralstor
/bin/mkdir -p /opt/integralstor/pki
/bin/mkdir -p /run/samba
mkdir -p /var/log/integralstor/integralstor_unicell
mkdir -p /opt/integralstor/integralstor_unicell/tmp
mkdir -p /opt/integralstor/integralstor_unicell/config/status
touch /var/log/integralstor/integralstor_unicell/integral_view.log
#touch /opt/integralstor/devel_env

### Install Integralstor_common ###
cd /opt/integralstor 
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/tar_installs/integralstor_common.tar.gz
/bin/tar xzf integralstor_common.tar.gz
ln -s /opt/integralstor/integralstor_common/site-packages/integralstor_common /usr/lib/python2.6/site-packages/integralstor_common
rm integralstor_common.tar.gz

### Install integralstor_unicell ###
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/tar_installs/integralstor_unicell.tar.gz
/bin/tar xzf integralstor_unicell.tar.gz
ln -s /opt/integralstor/integralstor_unicell/site-packages/integralstor_unicell /usr/lib/python2.6/site-packages/integralstor_unicell
rm integralstor_unicell.tar.gz
ln -s /opt/integralstor/integralstor_unicell/platform /opt/integralstor
#echo "unicell" >> platform
echo "self" >> platform
chmod 755 /opt/integralstor/integralstor_unicell/scripts/python/*
chmod 755 /opt/integralstor/integralstor_unicell/scripts/shell/*
rm -rf /etc/init/start-ttys.conf
cp -f /opt/integralstor/integralstor_unicell/install/conf_files/start-ttys.conf /etc/init
cp -f /opt/integralstor/integralstor_unicell/install/conf_files/integralstor_unicell_menu.conf /etc/init
rm -rf /etc/nsswitch.conf
cp /opt/integralstor/integralstor_unicell/install/conf_files/nsswitch.conf /etc

### Configure nginx ###
mkdir /etc/nginx/sites-enabled
ln -s /opt/integralstor/integralstor_unicell/integral_view/integral_view_nginx.conf /etc/nginx/sites-enabled/
sed -i 's/conf.d/sites-enabled/g' /etc/nginx/nginx.conf

### Configure uwsgi ###
mkdir /etc/uwsgi/vassals
ln -s /opt/integralstor/integralstor_unicell/integral_view/integral_view_uwsgi.ini /etc/uwsgi/vassals/
echo "/usr/bin/uwsgi --emperor /etc/uwsgi/vassals --uid root --gid root >/var/log/integralstor/integralstor_unicell/integral_view.log 2>&1 &" >> /etc/rc.local
sed -i "/\/usr\/local\/bin\/uwsgi --emperor \/etc\/uwsgi\/vassals --uid root --gid root/d" /etc/rc.local


### Configure ramdisks ###
#Change the ramdisks conf file name and location, move it into /opt/integralstor so it can be common to unicell and gridcell
touch /opt/integralstor/ramdisks.conf
touch /var/log/integralstor/integralstor_unicell/ramdisks
rm -rf /etc/init.d/ramdisk
ln -fs /opt/integralstor/integralstor_common/install/scripts/ramdisk /etc/init.d/
chmod +x /etc/init.d/ramdisk


### copying kmod-mv94xx directory to systems kernel Directory(This is spesific to Marvel servers) ###
cp -rf /lib/modules/2.6.32-431.el6.x86_64/extra/mv94xx /lib/modules/2.6.32-504.el6.x86_64/extra


#Download and install the non-rpm based software..
cd /tmp
# Uninstall old version first
/bin/rpm -e sysstat-9.0.4-27.el6.x86_64
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/tar_installs/sysstat-11.0.5.tar.xz
/bin/tar xJf sysstat-11.0.5.tar.xz
cd sysstat-11.0.5
./configure --prefix=/usr
make
make install
# end of sysstat re-install

cd /tmp
rm -rf sysstat-11.0.5*
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/tar_installs/setuptools-11.3.1.tar.gz
/bin/tar xzf setuptools-11.3.1.tar.gz
cd setuptools-11.3.1
python setup.py install


cd /tmp
rm -rf setuptools-11.3.1*
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/tar_installs/uwsgi-2.0.9.tar.gz
/bin/tar xzf uwsgi-2.0.9.tar.gz
cd uwsgi-2.0.9
python setup.py install


cd /tmp
rm -rf uwsgi-2.0.9*
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/tar_installs/netifaces-0.10.4.tar.gz
/bin/tar xzf netifaces-0.10.4.tar.gz
cd netifaces-0.10.4
python setup.py install

cd /tmp
rm -rf netifaces-0.10.4*
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/tar_installs/python-dateutil-2.4.2.tar.gz
/bin/tar xzf python-dateutil-2.4.2.tar.gz
cd python-dateutil-2.4.2
python setup.py install

cd /tmp
rm -rf python-dateutil-2.4.2*
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/tar_installs/python-crontab-1.9.3.tar.gz
/bin/tar xzf python-crontab-1.9.3.tar.gz
cd python-crontab-1.9.3
python setup.py install
cd /tmp

cd /tmp
rm -rf python-dateutil-2.4.2*
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/tar_installs/zfs-auto-snapshot.tar.gz
/bin/tar xzf zfs-auto-snapshot.tar.gz
cd zfs-auto-snapshot
make install
cd /tmp
rm -rf zfs-auto-snapshot*

### Configure crontab ###
(crontab -l 2>/dev/null; echo "SHELL=/bin/sh") | crontab -
(crontab -l 2>/dev/null; echo "PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin") | crontab -
(crontab -l 2>/dev/null; echo "*/1 * * * * /opt/integralstor/integralstor_common/scripts/python/generate_status.py > /tmp/out_status >> /tmp/err_status") | crontab -
(crontab -l 2>/dev/null; echo "*/10 * * * * /usr/lib64/sa/sa1 1 1 -S DISK > /tmp/out_status >> /tmp/err_status") | crontab -
(crontab -l 2>/dev/null; echo "10,40 * * * * /usr/bin/python -c 'from integralstor_common import zfs; zfs.execute_remote_replication()' > /tmp/replication_alerts >> /tmp/replication_errors") | crontab -
(crontab -l 2>/dev/null; echo "*/1 * * * * /opt/integralstor/integralstor_common/scripts/python/poll_for_alerts.py > /tmp/out_alerts >> /tmp/err_alerts") | crontab -
(crontab -l 2>/dev/null; echo "* * * * * /usr/bin/python -c 'from integralstor_common import scheduler_utils; scheduler_utils.run_from_shell()' > /tmp/scheduler_alerts >> /tmp/scheduler_errors") | crontab -

### Configure ZFS ###
rm -f /etc/modprobe.d/zfs.conf
ln -fs /opt/integralstor/integralstor_common/install/conf_files/zfs.conf /etc/modprobe.d
sed -i 's/\$ZFS mount -a/\$ZFS mount -O -a/' /etc/init.d/zfs

### configuring Vsftpd ###
rm -f /etc/vsftpd/vsftpd.conf
ln -fs /opt/integralstor/integralstor_unicell/install/conf_files/vsftpd.conf /etc/vsftpd

### configuring openldap ###


### configuring zed for zfs ###
#cd /etc/zfs
#/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/zed.d
cd /etc/init/
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/zed.conf
#cd /etc/sysconfig/modules/
#/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/zfs.modules #laoding ZFS module

### Configure rc.local ###
modprobe ipmi_devintf
modprobe 8021q
cp -f /sbin/zed /etc/init.d
echo "/sbin/zed" >> /etc/rc.local
echo "modprobe ipmi_devintf" >> /etc/rc.local
echo "/sbin/modprobe zfs" >> /etc/rc.local
chmod 755 /etc/rc.local
ln -sf /etc/rc.local /etc/rc3.d/S99local

### Grub and other file modification to show title/name Integralstor Unicell instead Centos 6.6 ###
#cd /boot/grub
#rm -f grub.conf
#/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/grub.conf
cd /etc
rm -f issue centos-release 
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/issue
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/centos-release
cd /usr/share/plymouth/themes/text
rm -f text.plymouth
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/text.plymouth
dracut -f

### Turn on other services ###
chkconfig rpcbind on
chkconfig nfs on
chkconfig winbind on
chkconfig smb on
chkconfig tgtd on
chkconfig ntpd on
chkconfig crond on
chkconfig ramdisk on

%end
