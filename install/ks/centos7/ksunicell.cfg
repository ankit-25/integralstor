%include /tmp/part-include
# Integralstor UniCELL
# platform=x86, AMD64, or Intel EM64T
# version=u1.3.4

# Firewall configuration
firewall --disabled

# Install OS instead of upgrade
install
unsupported_hardware

# Use network installation
url --url="http://192.168.1.150/netboot/distros/centos/7.2/x86_64/iso"
repo --name=extrasRepo --baseurl=http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/rpms

# Root password
rootpw --iscrypted $1$NdB3lmS6$oXH5W2QCg4d6syxgE1GTA0 

# System authorization information
auth  --useshadow  --passalgo=sha512

# Use text mode install
text

# System keyboard
keyboard us

# System language
lang en_US

# SELinux configuration
selinux --disabled

# Do not configure the X Window System
skipx

# Installation logging level
logging --level=info

# Reboot after installation
reboot --eject

# System timezone
timezone  Asia/Kolkata

%pre --log=/root/ks-pre.log

exec < /dev/tty3 > /dev/tty3 2>&1
/bin/chvt 3

#!/bin/sh
DIR="/sys/block"
MAXBOOTSIZE=300
MINBOOTSIZE=1
PATH="/dev"

### asking user for hardware specific entry ###
read -p "(optional) Enter hardware vendor else press <ENTER>:" vend

if [[ -n "$vend" ]]; then
  echo { \"platform\": \"unicell\", > /tmp/platform
  echo \"hardware_vendor\" : \"$vend\" } >> /tmp/platform
  echo "Entered vendor is: $vend" 
else
  echo { \"platform\": \"unicell\" } > /tmp/platform
  echo "platform is 'unicell'" 
fi


### Running a for loop on Disks available among one will be selected by user/admin for OS to Install ###
echo
echo "Available disks and their size:"
for DEV in sd{a..z} ; do
  if [ -b "/dev/$DEV" ] ; then
    SIZE=`/usr/bin/cat $DIR/$DEV/size`
    GB=$(($SIZE/2**21))
    echo "Disk : " $DEV " : Size : " $GB "GB"
  fi
done

echo
echo "Available disks to install Operating System and their size:"
for DEV in sd{a..z} ; do
  if [ -b "/dev/$DEV" ] ; then
    SIZE=`/usr/bin/cat $DIR/$DEV/size`
    GB=$(($SIZE/2**21))
    if [ "$GB" -le "$MAXBOOTSIZE" ]
        then
            if [ "$GB" -ge "$MINBOOTSIZE" ]
                then
                device=$DEV
                echo "Disk : "$device" : Size : "$GB "GB" 
            fi
    fi
  fi
done

echo
echo "(NOTE: Make sure that you have inserted two disks of same size to mirror the OS (To exit Press Ctrl+Alt+Del))" 

while true; do
  read -p "Do you want to mirror the operating system drive? (y/n):" input
  case $input in
    [yY] )
        read -p "Select the first mirrored OS drive (eg. sda):" bootdevice1
        read -p "Slect the second mirrored OS drive (eg. sdb):" bootdevice2
          size1=`/usr/bin/cat $DIR/$bootdevice1/size`
          size2=`/usr/bin/cat $DIR/$bootdevice2/size`
            if [[ "$size1" == "$size2" ]] ; then
              read -p "Select the swap size in MB.[Eg. 16384(for 8GB) OR 32768(for 16GB)]:" swsize1
              echo "#partitioning scheme generated in %pre for 3 drives" > /tmp/part-include
              echo "bootloader --location=mbr --driveorder=$bootdevice1,$bootdevice2" >> /tmp/part-include
              echo "zerombr" >> /tmp/part-include

              # final raid configurations
                while true; do
                 read -p "Do you want custom partitions? (y/n):" cust_part
                 case $cust_part in
                  [yY] )
                   read -p "Enter partition sizes for boot,home,opt,root(in MB)[use space between values]:" boot home opt root
                   /bin/sleep 2
                   echo "part raid.11    --size $boot    --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.12    --size $swsize1 --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.13    --size $home    --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.14    --size $opt                     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.15    --size $root                    --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.16    --size 1        --grow          --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.21    --size 1024     --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.22    --size $swsize1 --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.23    --size 10240    --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.24    --size 10240                    --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.25    --size 10240                    --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.26    --size 10240    --grow          --ondrive=$bootdevice2" >> /tmp/part-include
                   # You can add --spares=x  
                   echo "raid /boot      --fstype ext4   --device md0    --level=RAID1 raid.11 raid.21" >> /tmp/part-include
                   echo "raid swap       --fstype swap   --device md1    --level=RAID1 raid.12 raid.22" >> /tmp/part-include
                   echo "raid /home      --fstype ext4   --device md2    --level=RAID1 raid.13 raid.23" >> /tmp/part-include
                   echo "raid /opt       --fstype ext4   --device md3    --level=RAID1 raid.14 raid.24" >> /tmp/part-include
                   echo "raid /          --fstype ext4   --device md4    --level=RAID1 raid.15 raid.25" >> /tmp/part-include
                   echo "raid /var       --fstype ext4   --device md5    --level=RAID1 raid.16 raid.26" >> /tmp/part-include
                   echo "Committed partition sizes: boot=$boot MB, home=$home MB, opt=$opt MB, root=$root MB"
                   /bin/sleep 2
                   break;;
                  [nN] )
                   echo "Using default values for partition..."
                   # final raid configurations
                   echo "part raid.11    --size 1024     --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.12    --size $swsize1 --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.13    --size 10240    --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.14    --size 10240                    --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.15    --size 10240                    --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.16    --size 1        --grow          --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.21    --size 1024     --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.22    --size $swsize1 --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.23    --size 10240    --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.24    --size 10240                    --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.25    --size 10240                    --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.26    --size 10240    --grow          --ondrive=$bootdevice2" >> /tmp/part-include
                   # You can add --spares=x  
                   echo "raid /boot      --fstype ext4   --device md0    --level=RAID1 raid.11 raid.21" >> /tmp/part-include
                   echo "raid swap       --fstype swap   --device md1    --level=RAID1 raid.12 raid.22" >> /tmp/part-include
                   echo "raid /home      --fstype ext4   --device md2    --level=RAID1 raid.13 raid.23" >> /tmp/part-include
                   echo "raid /opt       --fstype ext4   --device md3    --level=RAID1 raid.14 raid.24" >> /tmp/part-include
                   echo "raid /          --fstype ext4   --device md4    --level=RAID1 raid.15 raid.25" >> /tmp/part-include
                   echo "raid /var       --fstype ext4   --device md5    --level=RAID1 raid.16 raid.26" >> /tmp/part-include
                   echo "Committed partition sizes: boot=$boot MB, home=$home MB, opt=$opt MB, root=$root MB"
                   /bin/sleep 2
                   break;;                      
                  * ) echo "Please answer yes(y) or no(n) to continue...";;
                 esac
                done
                while true; do
                  read -p "Do you want to clear prtitions of all disks? (y/n):" partselect1
                  case $partselect1 in
                    [yY] )  echo "clearpart --all" >> /tmp/part-include; break;;
                    [nN] )  echo "clearpart --drives=$bootdevice1,$bootdevice2 --all" >> /tmp/part-include; break;;
                    * ) echo "Please answer yes(y) or no(n) to continue...";;
                  esac
                done
            else
              echo "Error occured!!! found different size disks can't mirror OS. Exiting..."
            fi
            break;;
    [nN] )

        read -p "Select the boot device (eg. sda):" bootdevice1
        read -p "Select the swap size in MB.[Eg. 16384(for 8GB) OR 32768(for 16GB)]:" swsize2
        echo "zerombr" >> /tmp/part-include
        echo "#partitioning scheme generated in %pre for 3 drives" > /tmp/part-include
        echo "bootloader --append="crashkernel=auto" --location=mbr --boot-drive=$bootdevice1" >>/tmp/part-include
        #echo "bootloader --location=mbr" >> /tmp/part-include
        # final raid configurations
        while true; do
         read -p "Do you want custom partitions? (y/n):" cust_part
         case $cust_part in
          [yY] )
           read -p "Enter partition sizes for boot,home,opt,root respectively(in MB)[use space while entering values]:" boot home opt root
           # final boot partitions
           echo "part /boot --fstype ext4 --size $boot --ondisk $bootdevice1" >> /tmp/part-include
           echo "part swap --fstype swap --size $swsize2 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /home --fstype ext4 --size $home --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /opt --fstype ext4 --size $opt --ondisk $bootdevice1" >> /tmp/part-include
           echo "part / --fstype ext4 --size $root --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /var --fstype ext4 --size 1 --grow --ondisk $bootdevice1" >> /tmp/part-include
           echo "Committed partition sizes: boot=$boot MB, home=$home MB, opt=$opt MB, root=$root MB"
           /bin/sleep 2
           break;;
          [nN] )
           echo "Using default values for partition..."
           # final boot partitions
           echo "part /boot --fstype ext4 --size 1024 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part swap --fstype swap --size $swsize2 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /home --fstype ext4 --size 10240 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /opt --fstype ext4 --size 10240 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part / --fstype ext4 --size 10240 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /var --fstype ext4 --size 1 --grow --ondisk $bootdevice1" >> /tmp/part-include
           echo "Committed partition sizes: boot=$boot MB, home=$home MB, opt=$opt MB, root=$root MB"
           /bin/sleep 2
           break;;                      
          * ) echo "Please answer yes(y) or no(n) to continue...";;
         esac
        done
        while true; do
          read -p "Do you want to clear prtitions of all disks? (y/n):" partselect2
          case $partselect2 in
            [yY] )  echo "clearpart --all" >> /tmp/part-include; break;;
            [nN] )  echo "clearpart --drives=$bootdevice1 --all" >> /tmp/part-include; break;;
            * ) echo "Please answer yes(y) or no(n) to continue...";;
          esac
        done
        break;;
    * ) echo "Please answer yes(y) or no(n) to continue...";;
    esac
done

/bin/chvt 1

%end

### Package Section ###
%packages --ignoremissing
@core
@Compatibility libraries

### global packages section needed in default.
yum-utils
wget
salt-master
salt-minion
sg3_utils
perl-Config-General
scsi-target-utils
nfs-utils
smartmontools
samba-client
samba
samba-winbind
samba-winbind-clients
ipmitool
OpenIPMI
zfs
krb5-workstation
python-setuptools
python-pip
ypbind
ypserv
ntp
uwsgi
nginx
kexec-tools
python-devel
gcc
vsftpd
xinetd
shellinabox
urbackup-server
bind-utils
rsync
telnet
srvadmin-all
dell-system-update
vim-enhanced
iptraf-ng
clamav
clamav-server-systemd
clamav-update

%end

%post --nochroot --log=/mnt/sysimage/root/ks-post-nochroot.log
cp -rf /tmp/platform /mnt/sysimage/root
%end

%post --log=/root/ks-post-chroot.log

### Adding a user and group called integralstor. ###
groupadd integralstor -g 1000
useradd integralstor -g 1000
groupadd replicator -g 1001
useradd replicator -g 1001
echo "integralstor123" | passwd --stdin integralstor
echo "replicator123" | passwd --stdin replicator
echo "integralstor    ALL=(ALL)    ALL" >> /etc/sudoers
echo "replicator    ALL=(ALL)    NOPASSWD: /usr/sbin/zfs" >> /etc/sudoers

### Network interface configuration  ###
sed -i 's/BOOTPROTO=dhcp/BOOTPROTO=none/' /etc/sysconfig/network-scripts/ifcfg-eno*
sed -i 's/BOOTPROTO=dhcp/BOOTPROTO=none/' /etc/sysconfig/network-scripts/ifcfg-enp*
sed -i 's/BOOTPROTO=dhcp/BOOTPROTO=none/' /etc/sysconfig/network-scripts/ifcfg-em*
sed -i 's/ONBOOT=no/ONBOOT=yes/' /etc/sysconfig/network-scripts/ifcfg-eno*
sed -i 's/ONBOOT=no/ONBOOT=yes/' /etc/sysconfig/network-scripts/ifcfg-enp*
sed -i 's/ONBOOT=no/ONBOOT=yes/' /etc/sysconfig/network-scripts/ifcfg-em*
sed -i 's/NM_CONTROLLED=yes/NM_CONTROLLED=no/' /etc/sysconfig/network-scripts/ifcfg-eno*
sed -i 's/NM_CONTROLLED=yes/NM_CONTROLLED=no/' /etc/sysconfig/network-scripts/ifcfg-enp*
sed -i 's/NM_CONTROLLED=yes/NM_CONTROLLED=no/' /etc/sysconfig/network-scripts/ifcfg-em*
sed -i 's/USERCTL=yes/ONBOOT=no/' /etc/sysconfig/network-scripts/ifcfg-eno*
sed -i 's/USERCTL=yes/ONBOOT=no/' /etc/sysconfig/network-scripts/ifcfg-enp*
sed -i 's/USERCTL=yes/ONBOOT=no/' /etc/sysconfig/network-scripts/ifcfg-em*
sed -i 's/PEERDNS=no/PEERDNS=yes/' /etc/sysconfig/network-scripts/ifcfg-eno*
sed -i 's/PEERDNS=no/PEERDNS=yes/' /etc/sysconfig/network-scripts/ifcfg-enp*
sed -i 's/PEERDNS=no/PEERDNS=yes/' /etc/sysconfig/network-scripts/ifcfg-em*
sed -i 's/IPV6INIT=yes/IPV6INIT=no/' /etc/sysconfig/network-scripts/ifcfg-eno*
sed -i 's/IPV6INIT=yes/IPV6INIT=no/' /etc/sysconfig/network-scripts/ifcfg-enp*
sed -i 's/IPV6INIT=yes/IPV6INIT=no/' /etc/sysconfig/network-scripts/ifcfg-em*

### Do not want network manager to add DNS servers received from DHCP to /etc/resolv.conf ###
sed -i '/\[main\]/a dns=none' /etc/NetworkManager/NetworkManager.conf
echo "NETWORKING=yes" >> /etc/sysconfig/network
echo "127.0.0.1   localhost   localhost.localdomain   localhost4    localhost4.localdomain4" > /etc/hosts

### Disabling the OPenGPGCheck and reloading the abrtd service ###
if [ -e "/etc/abrt/abrt-action-save-package-data.conf" ] ; then
  sed -i 's/OpenGPGCheck = yes/OpenGPGCheck = no/' /etc/abrt/abrt-action-save-package-data.conf 
else
  echo "No such file found : /etc/abrt/abrt-action-save-package-data.conf"
fi

### SSHD configuration ###

/usr/sbin/sshd stop
sed '' /etc/ssh/sshd_config > /etc/ssh/original_sshd_config
sed '/#PermitRootLogin/a PermitRootLogin no' /etc/ssh/sshd_config > /etc/ssh/temp_file
sed -e '/requiretty/s/^/#/g' -i /etc/sudoers    #serach for requiretty and comment. This is to avoid tty for replication in zfs send/receive
rm -f /etc/ssh/sshd_config
mv /etc/ssh/temp_file /etc/ssh/sshd_config
/usr/sbin/sshd start
ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ''
ssh-keygen -t rsa -f /home/replicator/.ssh/id_rsa -N ''


### Editing the /etc/yum.repos.d/CentOS-Base.repo ###
# ..to disable base, updates and extras repositories. ###

cp -rf /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/Original-CentOS-Base-repo
sed -i '/\[base\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo 
sed -i '/\[updates\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo 
sed -i '/\[extras\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo
sed -i '/\[centosplus\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo
sed -i '/\[contrib\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo


### Directory creation ###
/usr/bin/mkdir -p /opt/integralstor
/usr/bin/mkdir -p /opt/integralstor/pki
/usr/bin/mkdir -p /run/samba
/usr/bin/mkdir -p /var/log/integralstor/integralstor_unicell
/usr/bin/mkdir -p /opt/integralstor/integralstor_unicell/tmp
mkdir -p /opt/integralstor/integralstor_unicell/config/status
mkdir -p /etc/logrotate.d_old
touch /var/log/integralstor/integralstor_unicell/integral_view.log

### Install Integralstor_common ###
cd /opt/integralstor 
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/integralstor_common.tar.gz
/bin/tar xzf integralstor_common.tar.gz
ln -s /opt/integralstor/integralstor_common/site-packages/integralstor_common /usr/lib/python2.7/site-packages/integralstor_common
rm integralstor_common.tar.gz

### Install integralstor_unicell ###
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/integralstor_unicell.tar.gz
/bin/tar xzf integralstor_unicell.tar.gz
ln -s /opt/integralstor/integralstor_unicell/site-packages/integralstor_unicell /usr/lib/python2.7/site-packages/integralstor_unicell
rm integralstor_unicell.tar.gz

### post code copy operationes ###
mv /etc/sysconfig/shellinaboxd /etc/sysconfig/shellinaboxd.bak
ln -s /opt/integralstor/integralstor_unicell/config/shellinabox/shellinaboxd /etc/sysconfig
yes | cp -rf /root/platform /opt/integralstor/integralstor_unicell
ln -s /opt/integralstor/integralstor_unicell/platform /opt/integralstor

chmod 755 /opt/integralstor/integralstor_unicell/scripts/python/*
chmod 755 /opt/integralstor/integralstor_unicell/scripts/shell/*
mkdir /opt/integralstor/integralstor_unicell/config/logs/cron_logs
mkdir /opt/integralstor/integralstor_unicell/config/logs/task_logs
chmod 777 /opt/integralstor/integralstor_unicell/config/logs/cron_logs
chmod 777 /opt/integralstor/integralstor_unicell/config/logs/task_logs
sed -i 's/RANDOM_DELAY=45/RANDOM_DELAY=5/' /etc/anacrontab
sed -i 's/START_HOURS_RANGE=3-22/START_HOURS_RANGE=0-1/' /etc/anacrontab

rm -rf /etc/nsswitch.conf
cp /opt/integralstor/integralstor_unicell/install/conf_files/nsswitch.conf /etc

cd /tmp/
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/getty\@tty1.service .
yes | cp /tmp/getty\@tty1.service /etc/systemd/system/getty.target.wants

cd /etc/systemd/system/getty.target.wants/
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/getty\@tty2.service .
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/getty\@tty3.service .
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/getty\@tty4.service .
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/getty\@tty5.service .

ln -s /etc/systemd/system/getty.target.wants/getty\@tty1.service /etc/systemd/system/
ln -s /etc/systemd/system/getty.target.wants/getty\@tty2.service /etc/systemd/system/
ln -s /etc/systemd/system/getty.target.wants/getty\@tty3.service /etc/systemd/system/
ln -s /etc/systemd/system/getty.target.wants/getty\@tty4.service /etc/systemd/system/
ln -s /etc/systemd/system/getty.target.wants/getty\@tty5.service /etc/systemd/system/

### Configure nginx ###
mkdir /etc/nginx/sites-enabled
cd /etc/nginx
mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/nginx.conf .
ln -s /opt/integralstor/integralstor_unicell/integral_view/integral_view_nginx.conf /etc/nginx/sites-enabled/
sed -i 's/conf.d/sites-enabled/g' /etc/nginx/nginx.conf

### Cinfigure xinetd ###
cd /etc/xinetd.d/
mv rsync rsync.bak
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/rsync

### Configure uwsgi ###
mkdir -p /etc/uwsgi/vassals
ln -s /opt/integralstor/integralstor_unicell/integral_view/integral_view_uwsgi.ini /etc/uwsgi/vassals/
cd /usr/lib/systemd/system
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/uwsginew.service .
ln -s /usr/lib/systemd/system/uwsginew.service /etc/systemd/system/multi-user.target.wants/


### Configure ramdisks ###
#Change the ramdisks conf file name and location, move it into /opt/integralstor so it can be common to unicell and gridcell
touch /opt/integralstor/ramdisks.conf
touch /var/log/integralstor/integralstor_unicell/ramdisks
ln -fs /opt/integralstor/integralstor_common/install/scripts/ramdisk /etc/init.d/

/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/ramdisk.service . 
ln -s /usr/lib/systemd/system/ramdisk.service /etc/systemd/system/multi-user.target.wants/

#Download and install the non-rpm based software..
cd /tmp
# Uninstall old version first
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/sysstat-11.0.5.tar.xz
/bin/tar xJf sysstat-11.0.5.tar.xz
cd sysstat-11.0.5
./configure --prefix=/usr
make
make install
rm -rf sysstat-11.0.5*

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/setuptools-29.0.1.tar.gz
/bin/tar xzf setuptools-29.0.1.tar.gz
cd setuptools-29.0.1
python setup.py install
rm -rf setuptools-29.0.1*

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/uwsgi-2.0.9.tar.gz
/bin/tar xzf uwsgi-2.0.9.tar.gz
cd uwsgi-2.0.9
python setup.py install
rm -rf uwsgi-2.0.9*

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/netifaces-0.10.5.tar.gz
/bin/tar xzf netifaces-0.10.5.tar.gz
cd netifaces-0.10.5
python setup.py install
rm -rf netifaces-0.10.5*

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/python-dateutil-2.6.0.tar.gz
/bin/tar xzf python-dateutil-2.6.0.tar.gz
cd python-dateutil-2.6.0
python setup.py install
rm -rf python-dateutil-2.6.0*

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/python-crontab-2.1.1.tar.gz
/bin/tar xzf python-crontab-2.1.1.tar.gz
cd python-crontab-2.1.1
python setup.py install
cd /tmp
rm -rf python-crontab-2.1.1*

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/mbuffer-20161115.tgz
/bin/tar xzf mbuffer-20161115.tgz
cd mbuffer-20161115
./configure
make && make install
cd /tmp
rm -rf mbuffer-20161115*

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/zfs-auto-snapshot.tar.gz
/bin/tar xzf zfs-auto-snapshot.tar.gz
cd zfs-auto-snapshot
make install
cd /tmp
rm -rf zfs-auto-snapshot*

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/Django-1.8.16.tar.gz
/bin/tar xzf Django-1.8.16.tar.gz 
cd Django-1.8.16
python setup.py install
cd /tmp
rm -rf Django-1.8.16*

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/7.2/x86_64/integralstor_unicell/v1.0/tar_installs/cron_descriptor-1.2.6.tar.gz
/bin/tar xzf cron_descriptor-1.2.6.tar.gz
cd cron_descriptor-1.2.6
python setup.py install
cd /tmp
rm -rf cron_descriptor-1.2.6*

### Configure crontab ###
(crontab -l 2>/dev/null; echo 'MAILTO=""') | crontab -
(crontab -l 2>/dev/null; echo "SHELL=/bin/sh") | crontab -
(crontab -l 2>/dev/null; echo "PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/dell/srvadmin/bin") | crontab -
(crontab -l 2>/dev/null; echo "*/1 * * * * /opt/integralstor/integralstor_common/scripts/python/generate_status.py > /tmp/out_status >> /tmp/err_status") | crontab -
(crontab -l 2>/dev/null; echo "*/10 * * * * /usr/lib64/sa/sa1 1 1 -S DISK > /tmp/out_status >> /tmp/err_status") | crontab -
(crontab -l 2>/dev/null; echo "*/1 * * * * /opt/integralstor/integralstor_common/scripts/python/poll_for_alerts.py > /tmp/out_alerts >> /tmp/err_alerts") | crontab -
(crontab -l 2>/dev/null; echo "*/1 * * * * /opt/integralstor/integralstor_unicell/scripts/python/poll_for_alerts.py > /tmp/out_unicell_alerts >> /tmp/err_unicell_alerts") | crontab -
(crontab -l 2>/dev/null; echo "*/1 * * * * /usr/bin/python /opt/integralstor/integralstor_common/scripts/python/task_processor.py > /tmp/out_task_processor >> /tmp/err_task_processor") | crontab -
(crontab -l 2>/dev/null; echo "0 0 * * * /usr/bin/python -c 'from integralstor_common import logs; logs.auto_rotate_logs()' > /tmp/auto_rotate_logs_alerts >> /tmp/auto_rotate_errors") | crontab -
(crontab -l 2>/dev/null; echo "@reboot /usr/sbin/modprobe ipmi_devintf > /tmp/logs-ipmi_devinfo_modprobe >> /tmp/errors-ipmi_devinfo_modprobe") | crontab -
(crontab -l 2>/dev/null; echo "@reboot /usr/sbin/modprobe zfs > /tmp/logs-zfs_modprobe >> /tmp/errors-zfs_modprobe") | crontab -

### Configure ZFS ###
rm -f /etc/modprobe.d/zfs.conf
ln -fs /opt/integralstor/integralstor_common/install/conf_files/zfs.conf /etc/modprobe.d
cp -rf /opt/integralstor/integralstor_unicell/install/conf_files/zed.rc /etc/zfs/zed.d

### configuring Vsftpd ###
rm -f /etc/vsftpd/vsftpd.conf
ln -fs /opt/integralstor/integralstor_unicell/install/conf_files/vsftpd.conf /etc/vsftpd

#Log rotation 
cp -f /etc/logrotate.d/* /etc/logrotate.d_old/
cp -f /opt/integralstor/integralstor_unicell/install/log_rotate_files/* /etc/logrotate.d/

### configuring zed for zfs ###
cd /etc/zfs
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/zed.d
cd /etc/init/
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/zed.conf
cd /etc/sysconfig/modules/
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/zfs.modules #laoding ZFS module

### Configure rc.local ###
modprobe ipmi_devintf
modprobe 8021q

if grep "dell" /opt/integralstor/platform > /dev/null
then
  (crontab -l 2>/dev/null; echo "@reboot srvadmin-services.sh restart > /tmp/srvadmin_logs >> /tmp/srvadmin_errors") | crontab -
else
  echo "Non dell hardware. Exiting..."
fi

### Grub and other file modification to show title/name Integralstor Unicell instead Centos 7.2 ###
cd /etc
rm -f issue centos-release 
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/issue
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/centos-release
cd /usr/share/plymouth/themes/text
rm -f text.plymouth
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_unicell/v1.0/text.plymouth
dracut -f

### Configuring clamav
mkdir /opt/integralstor/integralstor_unicell/config/clamav/quarantine
mkdir /opt/integralstor/integralstor_unicell/config/clamav/virus_definations
mkdir /var/run/clamd.scan/
touch /var/run/clamd.scan/clamd.sock
useradd clamscan  -d / -s /sbin/nologin -r
ln -s /opt/integralstor/integralstor_unicell/config/clamav/config/clamd.conf /etc/clam.d/scan.conf
mv -rf /etc/freshclam.conf /etc/freshclam.conf.bak
ln -s /opt/integralstor/integralstor_unicell/config/clamav/config/freshclam.conf /etc/clam.d/freshclam.conf

### Turn on other services ###
systemctl start rpcbind.service
systemctl enable rpcbind.service
systemctl start nfs-server.service
systemctl enable nfs-server.service
systemctl start winbind.service
systemctl enable winbind.service
systemctl start smb.service
systemctl enable smb.service
systemctl start tgtd.service
systemctl enable tgtd.service
systemctl start ntpd.service
systemctl enable ntpd.service
systemctl start crond.service
systemctl enable crond.service
systemctl start ramdisk.service
systemctl enable ramdisk.service
systemctl start vsftpd.service
systemctl enable vsftpd.service
systemctl start shellinaboxd.service
systemctl enable shellinaboxd.service
systemctl start uwsginew.service
systemctl enable uwsginew.service
systemctl start nginx.service
systemctl enable nginx.service
systemctl enable getty@tty1.service
systemctl daemon-reload
systemctl restart clamd@scan
systemctl enable clamd@scan
freshclam -d

%end
